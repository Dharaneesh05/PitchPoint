I want you to design and implement a complete, professional full-stack cricket web application with the following requirements:

1. General Website Features

Modern, unique, minimal, and fully responsive design for desktop, tablet, and mobile.

Professional UI/UX — clean layouts, subtle gradients, shadows, and smooth animations.

Smooth transitions for pages, modals, dropdowns, and buttons (use Framer Motion if React).

No emojis or cartoonish elements — only professional icons and design elements.

Toaster/pop-up notifications for all user actions (login success, signup errors, saved analysis, predictions, etc.).

Well-structured navigation with role-based dashboards.

Consistent color scheme with sports-themed yet modern look.

“Why This Website” section explaining the real-world value for each role.

2. Authentication System

Signup Page:

Fields: Username, Email, Password, Role (Coach / Analyst / Fan).

Email verification using OTP before account activation.

Passwords securely stored using hashing (bcrypt or Argon2).

Input validation & error handling.

Login Page:

Redirect users to role-based dashboards after successful login.

JWT/session-based authentication.

Toaster notification: “Login Successful”.

Role-Based Access Rules:

Coach → Can access both Coach + Analyst features.

Analyst → Can access Analyst dashboard only.

Fan → Fan dashboard only.

3. Coach Dashboard Features

Upcoming Matches:

Display upcoming games via Live Cricket API.

Cache API responses to improve performance and reduce rate-limit issues.

Player Performance Analysis:

Show top players’ stats: form, strengths, weaknesses, historical data.

Highlight local players first (e.g., Indian coach → Indian players prioritized).

Coach can analyze opponent teams but injured players are hidden for realism.

Team Selection Recommendation:

Suggest 11–15 best players based on:

Venue conditions

Player strengths & injuries

Opponent team stats & historical performance

Coach can customize, save, favorite, and export selections (PDF/Excel).

Visualizations:

Charts, bar graphs, pie charts, heatmaps for performance trends.

Comparative analysis (e.g., Virat Kohli vs Babar Azam head-to-head).

Analyst Tools Access:

Coaches can access Analyst dashboards (all features of an analyst).

4. Analyst Dashboard Features

Focus on team and match performance analysis.

Save and favorite analysis results.

Visualize data via charts, graphs, heatmaps.

Access historical match data, player stats, and opponent breakdowns.

Cannot access team selection features.

5. Fan Dashboard Features

Live & Upcoming Matches:

Display ongoing and scheduled matches using Live Cricket API.

Fantasy Points & Leaderboards:

Show top performers based on historical stats.

Leaderboards of fans who made accurate predictions.

Predictions & Engagement:

Fans can predict match outcomes.

Save predictions, favorite players, and view history.

Recommendations for fantasy games (like Dream11) based on stats and performance trends.

6. User Profiles (All Roles)

Show profile info + role badge (Coach / Analyst / Fan).

Saved data:

Coach/Analyst → saved analyses

Fan → saved predictions and favorite players/teams

Settings:

Dark mode toggle

Language support

Profile picture upload

7. Data Coverage

Players: Stats, form, role, injury status.

Teams: Lineups, recent performance, records.

Matches: Schedule, results, live updates.

Venues: Historical results, pitch report, win percentages.

Points System: Fantasy points breakdown for players.

Analysis History: Saved and favorited analysis for coaches/analysts.

8. Security & Performance

Role-based access control (RBAC) on backend.

Password hashing (bcrypt / Argon2).

JWT authentication & session management.

Cache API responses for performance.

Paginate/lazy load large datasets.

Optimize database queries for historical performance.

9. Professional UI/UX Enhancements

Minimal, clean layout with cards, tables, charts.

Smooth animations for page transitions, hover effects, modals.

Subtle shadows and gradients for a real SaaS look.

Distinct yet cohesive design for role-based dashboards.

Responsive design for all device types.

10. “Why This Website” Section

Coaches: Make smarter team decisions, analyze opponent strategies, select best XI.

Analysts: Gain data-driven insights, create charts and visual reports.

Fans: Enhance fantasy cricket strategy, predict matches, engage with leaderboards.

Adds real-world trust, utility, and professional value.

11. Technology Stack (Recommended)

Frontend:

React.js + TailwindCSS for styling.

Framer Motion for animations.

Charts: Chart.js / Recharts / D3.js for visualizations.

Backend:

Node.js + Express (or Flask/Django alternative).

REST APIs for authentication, analysis, predictions, and cricket data.

Database:

MongoDB / PostgreSQL (NoSQL for flexibility with cricket stats or relational for structured queries).

Live Cricket Data:

Integrate APIs like CricAPI, RapidAPI, or CricketData API.

Authentication & Security:

JWT for sessions

Password hashing (bcrypt / Argon2)

Role-based access control

Deployment:

Frontend → Vercel / Netlify

Backend → Render / Heroku

Database → MongoDB Atlas / Supabase

12. Extra Realism & Pro Features

Export analysis/reports as PDF or Excel.

Comparative player analysis & historical trends.

Community features for fans (leaderboards, predictions, and polls).

Injury & workload management for coaches/analysts.

Dark mode & localization support.

Fully production-ready design suitable for a real SaaS cricket platform.